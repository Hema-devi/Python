import os
class NegativeNumberError(Exception):
    def __init__(self, message="Negative number encountered"):
        self.message = message
        super().__init__(self.message)
def read_numbers_from_file(filename):
    numbers = []
    if not os.path.exists(filename):
        print(f"Error: The file '{filename}' does not exist.")
        return numbers
    with open(filename, 'r') as file:
        for line in file:
            try:
                number = int(line.strip())
                if number < 0:
                    raise NegativeNumberError(f"Negative number encountered: {number}")
                numbers.append(number)
            except ValueError:
                print(f"Warning: Skipping invalid number '{line.strip()}' in file.")
            except NegativeNumberError as e:
                print(f"Error: {e}")
    return numbers
def calculate_average(numbers):
    if not numbers:
        return 0
    return sum(numbers) / len(numbers)
filename = 'random_numbers.txt'
numbers = read_numbers_from_file(filename)
if numbers:
    average = calculate_average(numbers)
    print(f"The average of the random numbers is: {average}")
else:
    print("No valid numbers to calculate the average.")
